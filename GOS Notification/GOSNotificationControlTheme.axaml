<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:col="using:System.Collections.ObjectModel"
    xmlns:controls="using:GOSAvaloniaControls"
    xmlns:fl="using:FluentAvalonia.UI.Controls">
    <Design.PreviewWith>
        <Grid Width="200" Height="200">
            <controls:GOSNotificationControl />
        </Grid>
    </Design.PreviewWith>

    <Styles.Resources>
        <StreamGeometry x:Key="icon_bellfill">M7,16 A2,-2 0 0 0 9,14 L5,14 A2,-2 0 0 0 7,16 z M7.995,1.1 A0.9999,-0.9999 0 1 0 6.005,1.1 A5.002,-5.002 0 0 0 2,6.001 C2,7.098 1.5,12 0,13 L14,13 C12.5,12 12,7.098 12,6.001 C12,3.581 10.28,1.561 7.995,1.1 z</StreamGeometry>
        <controls:ByteToSeverityConverter x:Key="ByteToSeverityConverter" />
    </Styles.Resources>
    <Style Selector=":is(Button).clean">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="CornerRadius" Value="0" />
    </Style>
    <Style Selector=":is(Button).clean:disabled  /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button).clean:disabled /template/ Border#BorderElement">
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button).circle">
        <Setter Property="CornerRadius" Value="90" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="ContentTemplate">
            <DataTemplate>
                <Viewbox
                    Width="{TemplateBinding Width}"
                    Height="{TemplateBinding Height}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Child="{TemplateBinding Content}" />
            </DataTemplate>
        </Setter>
    </Style>
    <Style Selector="ContentControl.items">
        <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ExpanderHeaderBorderThickness}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Padding" Value="16,0" />
        <!--  16,8,16,8  -->
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border
                        Name="Root"
                        Width="{TemplateBinding Width}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            Name="ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Border>

                </Panel>
            </ControlTemplate>
        </Setter>
    </Style>
	<Style Selector="FlyoutPresenter.transparent">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="CornerRadius" Value="0" />
	</Style>

    <Style Selector="controls|GOSNotificationControl">
        <!--  Set Defaults  -->
        <!--<Setter Porperty="HorizontalAlignment" Value="Right" />
		<Setter Porperty="VerticalAlignment" Value="Bottom" />-->
        <Setter Property="Template">
            <ControlTemplate>
                <Grid
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    RowDefinitions="*,Auto">
                    <Button
                        x:Name="PART_buttonBell"
                        Grid.Row="1"
                        Padding="4"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Classes="clean"
                        ToolTip.Tip="Notification">
                        <Panel>
                            <fl:PathIcon Data="{StaticResource icon_bellfill}" />
                            <Viewbox
                                Width="10"
                                Height="10"
                                Margin="0,0,-5,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top">
                                <fl:InfoBadge
                                    x:Name="PART_infoBadge"
                                    Classes="Attention"
                                    IsVisible="False" />
                            </Viewbox>
                        </Panel>
                        <Button.Flyout>
                            <Flyout Placement="TopEdgeAlignedRight">
                                <ItemsControl
                                    x:Name="PART_buttonBellFlyout"
                                    Width="300"
                                    HorizontalAlignment="Stretch">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="controls:NotificationItem">
                                            <!--<ContentControl Classes="items" HorizontalAlignment="Stretch">
												<fl:InfoBar IsOpen="True" Severity="{Binding Item.Severity, Converter={StaticResource ByteToSeverityConverter}}" Message="{Binding Message}" VerticalAlignment="Center"/>
											</ContentControl>-->
                                            <!--  PointerPressed="{x:Static controls:GOSNotificationControl.Notification_PointerPressed}"  -->
                                            <fl:InfoBar
                                                MaxHeight="80"
                                                VerticalAlignment="Center"
                                                IsClosable="False"
                                                IsOpen="True"
                                                Message="{Binding Message}"
                                                Severity="{Binding Severity, Converter={StaticResource ByteToSeverityConverter}}" />

                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Flyout>
                        </Button.Flyout>
                        <FlyoutBase.AttachedFlyout>
                            <Flyout Placement="TopEdgeAlignedRight" FlyoutPresenterClasses="transparent">
                                <ItemsControl x:Name="PART_ballon" Width="400">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="controls:BallonItem">
                                            <!--  Title="Notification"  -->
                                            <fl:InfoBar
                                                IsOpen="True"
                                                Message="{Binding Item.Message}"
                                                Severity="{Binding Item.Severity, Converter={StaticResource ByteToSeverityConverter}}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </Button>
                </Grid>
            </ControlTemplate>
        </Setter>
    </Style>
</Styles>
